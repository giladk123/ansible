# AWS playbook
---

- name: Create spot instace request
  hosts: localhost
  connection: local
  
   
  tasks:
    - name: Spot Request Creation with options
      amazon.aws.ec2_spot_instance:
        aws_access_key: "{{ec2_access_key}}"
        aws_secret_key: "{{ec2_secret_key}}"
        launch_specification:
          image_id: ami-04505e74c0741db8d
          key_name: kuber
          instance_type: t2.medium
          block_device_mappings:
           - device_name: /dev/sda1
             ebs:
               delete_on_termination: True
               volume_type: gp2
               volume_size: 30  
          security_group_ids: sg-07d3ca5c041bc9e70
        spot_price: '0.0150'
        region: us-east-1
        count: 1
        tags:
          Environment: Dev
          App: Microk8s
      register: spot_request_result
    - debug:
          msg: "Spot Instance Request ID - {{ spot_request_result.spot_request.spot_instance_request_id }}"

    - name: Pause for 1 min to create spot instance
      pause:
       minutes: 1

    - name: Get instance info
      amazon.aws.ec2_instance_info:
        aws_access_key: "{{ec2_access_key}}"
        aws_secret_key: "{{ec2_secret_key}}"
        region: us-east-1
        filters:
          spot-instance-request-id: "{{ spot_request_result.spot_request.spot_instance_request_id }}"
      register: ec2_node_info

    - name: Wait 300 seconds for port 22 to become open
      wait_for:
        port: 22
        host: '{{ ec2_node_info.instances[0].public_ip_address }}'
        delay: 10
      vars:
        ansible_connection: local
      register: check_port_result

    - name: Add new instance to host group
      add_host:
         hostname: "{{ ec2_node_info.instances[0].public_ip_address }}"
         groupname: microk8s
         ansible_ssh_private_key_file: "/var/jenkins_home/ansible/kuber.pem"
      register: add_host

- hosts: microk8s
  remote_user: ubuntu
  become: yes
  gather_facts: no
  pre_tasks:
    - name: install python
      raw: 'sudo apt-get -y install python3'
  tasks:
    - name: update all packages on servers
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600

    - name: Upgrade all packages on servers
      apt:
        upgrade: dist
        force_apt_get: yes

    - name: Install Apache
      apt: 
        name: apache2
        state: present
   